<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbServiceStatus.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>